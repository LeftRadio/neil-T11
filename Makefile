##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [2.23.0] date: [Thu Jun 01 05:28:08 GMT+03:00 2017]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = neil-t11-master

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -O3

#######################################
# paths
#######################################
# source path
SOURCES_DIR =  \
 \
cmsis \
cmsis_boot \
cmsis_boot/startup \
Drivers/AUDIO_IF \
Drivers/AUDIO_IF/AD1852 \
Drivers/AUDIO_IF/PGA2311 \
Drivers/AUDIO_IF/Si5351 \
Drivers/FFT \
Drivers/HAL \
Drivers/HAL/BKP_SRAM4K \
Drivers/HAL/I2C \
Drivers/HAL/I2S \
Drivers/HAL/LEDS \
Drivers/HAL/RELAY \
Drivers/HAL/SPI \
Drivers/HAL/SysTick \
Drivers/STM32_USB_Device_Library/Class/audio/src \
Drivers/STM32_USB_Device_Library/Core/src \
Drivers/STM32_USB_OTG_Driver/src \
Drivers/T11_Platform \
Drivers/USER_IF \
Drivers/USER_IF/bitmaps \
Drivers/USER_IF/fonts \
Drivers/USER_IF/NGL \
Drivers/USER_IF/pages/MainPage \
Drivers/USER_IF/TouchScreen \
stdio \
stm_lib/source \
syscalls

# firmware library path
PERIFLIB_PATH =

# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
main.c \
stm32f4xx_it.c \
cmsis/math_helper.c \
cmsis_boot/system_stm32f4xx.c \
cmsis_boot/startup/startup_stm32f4xx.c \
Drivers/AUDIO_IF/t11_audio_if.c \
Drivers/AUDIO_IF/AD1852/AD1852.c \
Drivers/AUDIO_IF/PGA2311/pga2311.c \
Drivers/AUDIO_IF/Si5351/Si5351.c \
Drivers/FFT/FFT.c \
Drivers/HAL/t11_hal.c \
Drivers/HAL/BKP_SRAM4K/BKP_SRAM4K.c \
Drivers/HAL/I2C/I2C.c \
Drivers/HAL/I2S/I2S.c \
Drivers/HAL/LEDS/LEDS.c \
Drivers/HAL/RELAY/relay.c \
Drivers/HAL/SPI/SPI.c \
Drivers/HAL/SysTick/stm32f10x_systick.c \
Drivers/HAL/SysTick/systick.c \
Drivers/STM32_USB_Device_Library/Class/audio/src/usbd_audio_core.c \
Drivers/STM32_USB_Device_Library/Core/src/usbd_core.c \
Drivers/STM32_USB_Device_Library/Core/src/usbd_desc.c \
Drivers/STM32_USB_Device_Library/Core/src/usbd_req.c \
Drivers/STM32_USB_Device_Library/Core/src/usbd_usr.c \
Drivers/STM32_USB_OTG_Driver/src/usb_bsp.c \
Drivers/STM32_USB_OTG_Driver/src/usb_core.c \
Drivers/STM32_USB_OTG_Driver/src/usb_dcd.c \
Drivers/STM32_USB_OTG_Driver/src/usb_dcd_int.c \
Drivers/T11_Platform/platform.c \
Drivers/USER_IF/t11_user_if.c \
Drivers/USER_IF/peeklevel.c \
Drivers/USER_IF/bitmaps/Clock.c \
Drivers/USER_IF/bitmaps/Globe.c \
Drivers/USER_IF/bitmaps/List.c \
Drivers/USER_IF/bitmaps/Work.c \
Drivers/USER_IF/fonts/ms_shell_dlg_2_10_bold.c \
Drivers/USER_IF/fonts/ms_shell_dlg_2_8_bold.c \
Drivers/USER_IF/fonts/ms_shell_dlg_2_8_normal.c \
Drivers/USER_IF/NGL/colors-5-6-5.c \
Drivers/USER_IF/pages/MainPage/mainpage.c \
Drivers/USER_IF/TouchScreen/touchscreen.c \
stdio/printf.c \
stm_lib/source/misc.c \
stm_lib/source/stm32f4xx_adc.c \
stm_lib/source/stm32f4xx_crc.c \
stm_lib/source/stm32f4xx_dbgmcu.c \
stm_lib/source/stm32f4xx_dma.c \
stm_lib/source/stm32f4xx_exti.c \
stm_lib/source/stm32f4xx_flash.c \
stm_lib/source/stm32f4xx_fsmc.c \
stm_lib/source/stm32f4xx_gpio.c \
stm_lib/source/stm32f4xx_i2c.c \
stm_lib/source/stm32f4xx_pwr.c \
stm_lib/source/stm32f4xx_rcc.c \
stm_lib/source/stm32f4xx_rtc.c \
stm_lib/source/stm32f4xx_spi.c \
stm_lib/source/stm32f4xx_syscfg.c \
stm_lib/source/stm32f4xx_tim.c \
syscalls/syscalls.c

# ASM sources
ASM_SOURCES =

######################################
# firmware library
######################################
PERIFLIB_SOURCES =

#######################################
# binaries
#######################################
BINPATH = C:\Program Files\GNU Tools ARM Embedded\5.4 2016q3\bin
PREFIX = arm-none-eabi-
CC = $(BINPATH)/$(PREFIX)gcc
AS = $(BINPATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(BINPATH)/$(PREFIX)objcopy
AR = $(BINPATH)/$(PREFIX)ar
SZ = $(BINPATH)/$(PREFIX)size
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4
# fpu
FPU = -mfpu=fpv4-sp-d16
# float-abi
FLOAT-ABI = -mfloat-abi=hard
# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
AS_DEFS =

# C defines
C_DEFS =  \
-DSTM32F407VE \
-DSTM32F4XX \
-DUSE_STDPERIPH_DRIVER \
-DUSE_ULPI_PHY \
-DUSE_USB_OTG_HS \
-DUSE_DEVICE_MODE \
-DARM_MATH_CM4 \
-D__FPU_PRESENT \

# AS includes
AS_INCLUDES =

# C includes
C_INCLUDES =  \
-Icmsis \
-Icmsis_boot \
-IDrivers/AUDIO_IF \
-IDrivers/AUDIO_IF/AD1852 \
-IDrivers/AUDIO_IF/PGA2311 \
-IDrivers/AUDIO_IF/Si5351 \
-IDrivers/FFT \
-IDrivers/HAL \
-IDrivers/HAL/BKP_SRAM4K \
-IDrivers/HAL/I2C \
-IDrivers/HAL/I2S \
-IDrivers/HAL/LEDS \
-IDrivers/HAL/RELAY \
-IDrivers/HAL/SPI \
-IDrivers/HAL/SysTick \
-IDrivers/STM32_USB_Device_Library/Class/audio/inc \
-IDrivers/STM32_USB_Device_Library/Core/inc \
-IDrivers/STM32_USB_OTG_Driver/inc \
-IDrivers/T11_Platform \
-IDrivers/USER_IF \
-IDrivers/USER_IF/bitmaps \
-IDrivers/USER_IF/fonts \
-IDrivers/USER_IF/NGL \
-IDrivers/USER_IF/pages \
-IDrivers/USER_IF/pages/MainPage \
-IDrivers/USER_IF/TouchScreen \
-Istm_lib/include

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections
CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -g -Wall -fdata-sections -ffunction-sections -fno-strict-aliasing

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = arm-gcc-link.ld

# libraries
LIBS = -lngl -lc -lm -lnosys
LIBDIR = Drivers/USER_IF/NGL
LDFLAGS = $(MCU) -Wall -g -nostartfiles "-Wl,-Map=$(BUILD_DIR)/$(TARGET).map" -T$(LDSCRIPT) -L$(LIBDIR) $(LIBS) -Wl,--gc-sections

# default action: build all
all:
	@echo - building $(TARGET)...
	$(MAKE) $(BUILD_DIR)/$(TARGET).elf
	$(MAKE) $(BUILD_DIR)/$(TARGET).hex
	$(MAKE) $(BUILD_DIR)/$(TARGET).bin

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR)
	$(CC) -c $(CFLAGS) $(BUILD_DIR)/$(notdir $(<:.c)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $(OBJECTS)
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR):
	mkdir $@


.PHONY: clean flash flash_s debug

#######################################
# clean up
#######################################
clean:
	@echo - cleaning $(BUILD_DIR)...
ifeq ($(OS),Windows)
	($(BUILD_DIR):&(rd /s /q "$(BUILD_DIR)" 2> NUL))&
endif
ifeq ($(OS),Linux)
	-@rm -rf $(BUILD_DIR)
	-@rm -rf $(LSTDIR)
	-@rm -rf $(BINDIR)
endif

#######################################
# flash
#######################################
OPENOCD_PARAM = -c "source [find interface/stlink-v2.cfg]"
OPENOCD_PARAM += -c "transport select hla_swd"
OPENOCD_PARAM += -c "source [find target/stm32f4x_stlink.cfg]"

OPENOCD_PARAM_DEBUG = $(OPENOCD_PARAM)
OPENOCD_PARAM_DEBUG += -c "gdb_port 3333"
OPENOCD_PARAM_DEBUG += -c "debug_level 2"
OPENOCD_PARAM_DEBUG += -c "set WORKAREASIZE 0x2000"
OPENOCD_PARAM_DEBUG += -c "reset_config srst_only"

FLASHER = openocd

flash:all
	@echo - programming with $(FLASHER)...
	$(FLASHER) $(OPENOCD_PARAM) -c "program ./$(BUILD_DIR)/$(TARGET).elf verify reset exit"

erase:
	@echo - erasing memory with $(FLASHER)...

debug:flash
	@echo - $(FLASHER) server is running...
	@echo - OPENOCD_PARAM_DEBUG
	$(FLASHER) $(OPENOCD_PARAM_DEBUG)

#######################################
# dependencies
#######################################
-include $(shell mkdir .dep 2>/dev/null) $(wildcard .dep/*)

# *** EOF ***